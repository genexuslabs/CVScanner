apply plugin: 'com.android.library'
apply plugin: 'maven'

// This is the library version used when deploying the artifact
version = "1.3.4-SNAPSHOT"
group = "com.genexus"

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 20
        versionName version
        renderscriptTargetApi 24
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'com.google.android.gms:play-services-basement:17.1.0'
    implementation 'com.google.android.gms:play-services-vision:18.0.0'
    implementation 'com.genexus:mobilevision-pipeline:1.0.8-SNAPSHOT'
    implementation 'com.genexus:opencv:4.1.1-SNAPSHOT'
}

def siteUrl = "https://github.com/Credntia/CVScanner"
def gitUrl = "https://github.com/Credntia/CVScanner.git"

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: NEXUS_SNAPSHOTS_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
        }
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    artifacts {
        archives androidSourcesJar
    }
}


